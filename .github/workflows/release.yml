name: Release

on:
  push:
    branches:
      - github_token_release
      # - main
      # - next-major

jobs:
  get-access-token:
    runs-on: ubuntu-latest
    steps:
      - id: get-access-token
        uses: camertron/github-app-installation-auth-action@v1
        with:
          app-id: ${{ vars.PRIMER_APP_ID_SHARED }}
          private-key: ${{ secrets.PRIMER_APP_PRIVATE_KEY_SHARED }}
          client-id: ${{ vars.PRIMER_APP_CLIENT_ID_SHARED }}
          client-secret: ${{ secrets.PRIMER_APP_CLIENT_SECRET_SHARED }}
          installation-id: ${{ vars.PRIMER_APP_INSTALLATION_ID_SHARED }}
          encrypt: true

  decrypt-access-token:
    runs-on: ubuntu-latest
    needs: get-access-token
    steps:
      - id: decrypt-access-token
        uses: actions/github-script@v6
        with:
          script: |
            console.log(process.env.ACCESS_TOKEN.length)
            console.log(process.env.PRIVATE_KEY.length)
            const crypto = require('crypto')
            const encryptedToken = Buffer.from(process.env.ACCESS_TOKEN, 'base64')
            const token = crypto.privateDecrypt(process.env.PRIVATE_KEY, encryptedToken).toString()
            return token
          result-encoding: string
        env:
          PRIVATE_KEY: ${{ secrets.PRIMER_APP_PRIVATE_KEY_SHARED }}
          ACCESS_TOKEN: ${{ needs.get-access-token.steps.get-access-token.outputs.access-token }}

  release-main:
    # if: github.ref_name == 'main'
    name: Main
    needs: decrypt-access-token
    uses: primer/.github/.github/workflows/release.yml@main
    secrets:
      gh_token: ${{ needs.decrypt-access-token.steps.decrypt-access-token.outputs.result }}
      npm_token: ${{ secrets.NPM_AUTH_TOKEN_SHARED }}

  release-next-major:
    if: github.ref_name == 'next-major'
    name: Next major
    needs: decrypt-access-token
    uses: primer/.github/.github/workflows/release.yml@main
    with:
      title: Release tracking (next major)
    secrets:
      gh_token: ${{ needs.decrypt-access-token.steps.decrypt-access-token.outputs.result }}
      npm_token: ${{ secrets.NPM_AUTH_TOKEN_SHARED }}
